(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){(function(global){var SolidityEvent=require("web3/lib/web3/event.js");var BlockchainUtils=require("truffle-blockchain-utils");var Web3=require("web3");if(typeof Web3=="object"&&Object.keys(Web3).length==0){Web3=global.Web3}var contract=function(module){function Provider(provider){this.provider=provider}Provider.prototype.send=function(){return this.provider.send.apply(this.provider,arguments)};Provider.prototype.sendAsync=function(){return this.provider.sendAsync.apply(this.provider,arguments)};var BigNumber=(new Web3).toBigNumber(0).constructor;var Utils={is_object:function(val){return typeof val=="object"&&!Array.isArray(val)},is_big_number:function(val){if(typeof val!="object")return false;try{new BigNumber(val);return true}catch(e){return false}},decodeLogs:function(C,instance,logs){return logs.map(function(log){var logABI=C.events[log.topics[0]];if(logABI==null){return null}var decoder=new SolidityEvent(null,logABI,instance.address);return decoder.decode(log)}).filter(function(log){return log!=null})},promisifyFunction:function(fn,C){var self=this;return function(){var instance=this;var args=Array.prototype.slice.call(arguments);var tx_params={};var last_arg=args[args.length-1];if(Utils.is_object(last_arg)&&!Utils.is_big_number(last_arg)){tx_params=args.pop()}tx_params=Utils.merge(C.class_defaults,tx_params);return C.detectNetwork().then(function(){return new Promise(function(accept,reject){var callback=function(error,result){if(error!=null){reject(error)}else{accept(result)}};args.push(tx_params,callback);fn.apply(instance.contract,args)})})}},synchronizeFunction:function(fn,instance,C){var self=this;return function(){var args=Array.prototype.slice.call(arguments);var tx_params={};var last_arg=args[args.length-1];if(Utils.is_object(last_arg)&&!Utils.is_big_number(last_arg)){tx_params=args.pop()}tx_params=Utils.merge(C.class_defaults,tx_params);return C.detectNetwork().then(function(){return new Promise(function(accept,reject){var callback=function(error,tx){if(error!=null){reject(error);return}var timeout=C.synchronization_timeout||24e4;var start=(new Date).getTime();var make_attempt=function(){C.web3.eth.getTransactionReceipt(tx,function(err,receipt){if(err)return reject(err);if(receipt!=null){return accept({tx:tx,receipt:receipt,logs:Utils.decodeLogs(C,instance,receipt.logs)})}if(timeout>0&&(new Date).getTime()-start>timeout){return reject(new Error("Transaction "+tx+" wasn't processed in "+timeout/1e3+" seconds!"))}setTimeout(make_attempt,1e3)})};make_attempt()};args.push(tx_params,callback);fn.apply(self,args)})})}},merge:function(){var merged={};var args=Array.prototype.slice.call(arguments);for(var i=0;i<args.length;i++){var object=args[i];var keys=Object.keys(object);for(var j=0;j<keys.length;j++){var key=keys[j];var value=object[key];merged[key]=value}}return merged},parallel:function(arr,callback){callback=callback||function(){};if(!arr.length){return callback(null,[])}var index=0;var results=new Array(arr.length);arr.forEach(function(fn,position){fn(function(err,result){if(err){callback(err);callback=function(){}}else{index++;results[position]=result;if(index>=arr.length){callback(null,results)}}})})},bootstrap:function(fn){Object.keys(fn._static_methods).forEach(function(key){fn[key]=fn._static_methods[key].bind(fn)});Object.keys(fn._properties).forEach(function(key){fn.addProp(key,fn._properties[key])});return fn}};function Contract(contract){var constructor=this.constructor;this.abi=constructor.abi;if(typeof contract=="string"){var address=contract;var contract_class=constructor.web3.eth.contract(this.abi);contract=contract_class.at(address)}this.contract=contract;for(var i=0;i<this.abi.length;i++){var item=this.abi[i];if(item.type=="function"){if(item.constant==true){this[item.name]=Utils.promisifyFunction(contract[item.name],constructor)}else{this[item.name]=Utils.synchronizeFunction(contract[item.name],this,constructor)}this[item.name].call=Utils.promisifyFunction(contract[item.name].call,constructor);this[item.name].sendTransaction=Utils.promisifyFunction(contract[item.name].sendTransaction,constructor);this[item.name].request=contract[item.name].request;this[item.name].estimateGas=Utils.promisifyFunction(contract[item.name].estimateGas,constructor)}if(item.type=="event"){this[item.name]=contract[item.name]}}this.allEvents=contract.allEvents;this.address=contract.address;this.transactionHash=contract.transactionHash}Contract._static_methods={setProvider:function(provider){if(!provider){throw new Error("Invalid provider passed to setProvider(); provider is "+provider)}var wrapped=new Provider(provider);this.web3.setProvider(wrapped);this.currentProvider=provider},new:function(){var self=this;if(this.currentProvider==null){throw new Error(this.contract_name+" error: Please call setProvider() first before calling new().")}var args=Array.prototype.slice.call(arguments);if(!this.unlinked_binary){throw new Error(this._json.contract_name+" error: contract binary not set. Can't deploy new instance.")}return self.detectNetwork().then(function(network_id){var regex=/__[^_]+_+/g;var unlinked_libraries=self.binary.match(regex);if(unlinked_libraries!=null){unlinked_libraries=unlinked_libraries.map(function(name){return name.replace(/_/g,"")}).sort().filter(function(name,index,arr){if(index+1>=arr.length){return true}return name!=arr[index+1]}).join(", ");throw new Error(self.contract_name+" contains unresolved libraries. You must deploy and link the following libraries before you can deploy a new version of "+self._json.contract_name+": "+unlinked_libraries)}}).then(function(){return new Promise(function(accept,reject){var contract_class=self.web3.eth.contract(self.abi);var tx_params={};var last_arg=args[args.length-1];if(Utils.is_object(last_arg)&&!Utils.is_big_number(last_arg)){tx_params=args.pop()}tx_params=Utils.merge(self.class_defaults,tx_params);if(tx_params.data==null){tx_params.data=self.binary}var intermediary=function(err,web3_instance){if(err!=null){reject(err);return}if(err==null&&web3_instance!=null&&web3_instance.address!=null){accept(new self(web3_instance))}};args.push(tx_params,intermediary);contract_class.new.apply(contract_class,args)})})},at:function(address){var self=this;if(address==null||typeof address!="string"||address.length!=42){throw new Error("Invalid address passed to "+this._json.contract_name+".at(): "+address)}var contract=new this(address);contract.then=function(fn){return self.detectNetwork().then(function(network_id){var instance=new self(address);return new Promise(function(accept,reject){self.web3.eth.getCode(address,function(err,code){if(err)return reject(err);if(!code||new BigNumber(code).eq(0)){return reject(new Error("Cannot create instance of "+self.contract_name+"; no code at address "+address))}accept(instance)})})}).then(fn)};return contract},deployed:function(){var self=this;var val={};val.then=function(fn){return self.detectNetwork().then(function(){if(self._json.networks[self.network_id]==null){throw new Error(self.contract_name+" has not been deployed to detected network (network/artifact mismatch)")}if(!self.isDeployed()){throw new Error(self.contract_name+" has not been deployed to detected network ("+self.network_id+")")}return new self(self.address)}).then(fn)};return val},defaults:function(class_defaults){if(this.class_defaults==null){this.class_defaults={}}if(class_defaults==null){class_defaults={}}var self=this;Object.keys(class_defaults).forEach(function(key){var value=class_defaults[key];self.class_defaults[key]=value});return this.class_defaults},hasNetwork:function(network_id){return this._json.networks[network_id+""]!=null},isDeployed:function(){if(this.network_id==null){return false}if(this._json.networks[this.network_id]==null){return false}return!!this.network.address},detectNetwork:function(){var self=this;return new Promise(function(accept,reject){if(self.network_id){if(self.networks[self.network_id]!=null){return accept(self.network_id)}}self.web3.version.getNetwork(function(err,result){if(err)return reject(err);var network_id=result.toString();if(self.hasNetwork(network_id)){self.setNetwork(network_id);return accept()}var uris=Object.keys(self._json.networks).filter(function(network){return network.indexOf("blockchain://")==0});var matches=uris.map(function(uri){return BlockchainUtils.matches.bind(BlockchainUtils,uri,self.web3.currentProvider)});Utils.parallel(matches,function(err,results){if(err)return reject(err);for(var i=0;i<results.length;i++){if(results[i]){self.setNetwork(uris[i]);return accept()}}self.setNetwork(network_id);accept()})})})},setNetwork:function(network_id){if(!network_id)return;this.network_id=network_id+""},resetAddress:function(){delete this.network.address},link:function(name,address){var self=this;if(typeof name=="function"){var contract=name;if(contract.isDeployed()==false){throw new Error("Cannot link contract without an address.")}this.link(contract.contract_name,contract.address);Object.keys(contract.events).forEach(function(topic){self.network.events[topic]=contract.events[topic]});return}if(typeof name=="object"){var obj=name;Object.keys(obj).forEach(function(name){var a=obj[name];self.link(name,a)});return}if(this._json.networks[this.network_id]==null){this._json.networks[this.network_id]={events:{},links:{}}}this.network.links[name]=address},clone:function(options){var self=this;var temp=function TruffleContract(){this.constructor=temp;return Contract.apply(this,arguments)};var json=options;var network_id;if(typeof options!="object"){json=self._json;network_id=options;options={}}temp.prototype=Object.create(self.prototype);temp._static_methods=this._static_methods;temp._properties=this._properties;temp._property_values={};temp._json=json||{};Utils.bootstrap(temp);temp.web3=new Web3;temp.class_defaults=temp.prototype.defaults||{};if(network_id){temp.setNetwork(network_id)}Object.keys(options).forEach(function(key){if(key.indexOf("x-")!=0)return;temp[key]=options[key]});return temp},addProp:function(key,fn){var self=this;var getter=function(){if(fn.get!=null){return fn.get.call(self)}return self._property_values[key]||fn.call(self)};var setter=function(val){if(fn.set!=null){fn.set.call(self,val);return}throw new Error(key+" property is immutable")};var definition={};definition.enumerable=false;definition.configurable=false;definition.get=getter;definition.set=setter;Object.defineProperty(this,key,definition)},toJSON:function(){return this._json}};Contract._properties={contract_name:{get:function(){return this._json.contract_name},set:function(val){this._json.contract_name=val}},abi:{get:function(){return this._json.abi},set:function(val){this._json.abi=val}},network:function(){var network_id=this.network_id;if(network_id==null){throw new Error(this.contract_name+" has no network id set, cannot lookup artifact data. Either set the network manually using "+this.contract_name+".setNetwork(), run "+this.contract_name+".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.")}if(this._json.networks[network_id]==null){throw new Error(this.contract_name+" has no network configuration for its current network id ("+network_id+").")}return this._json.networks[network_id]},networks:function(){return this._json.networks},address:{get:function(){var address=this.network.address;if(address==null){throw new Error("Cannot find deployed address: "+this.contract_name+" not deployed or address not set.")}return address},set:function(val){if(val==null){throw new Error("Cannot set deployed address; malformed value: "+val)}var network_id=this.network_id;if(network_id==null){throw new Error(this.contract_name+" has no network id set, cannot lookup artifact data. Either set the network manually using "+this.contract_name+".setNetwork(), run "+this.contract_name+".detectNetwork(), or use new(), at() or deployed() as a thenable which will detect the network automatically.")}if(this._json.networks[network_id]==null){this._json.networks[network_id]={events:{},links:{}}}this.network.address=val}},links:function(){if(this._json.networks[this.network_id]==null){return{}}return this.network.links||{}},events:function(){var web3=new Web3;var events;if(this._json.networks[this.network_id]==null){events={}}else{events=this.network.events||{}}var abi=this.abi;abi.forEach(function(item){if(item.type!="event")return;var signature=item.name+"(";item.inputs.forEach(function(input,index){signature+=input.type;if(index<item.inputs.length-1){signature+=","}});signature+=")";var topic=web3.sha3(signature);events[topic]=item});return events},binary:function(){var self=this;var binary=this.unlinked_binary;Object.keys(this.links).forEach(function(library_name){var library_address=self.links[library_name];var regex=new RegExp("__"+library_name+"_*","g");binary=binary.replace(regex,library_address.replace("0x",""))});return binary},unlinked_binary:{get:function(){return this._json.unlinked_binary},set:function(val){this._json.unlinked_binary=val}},schema_version:function(){return this._json.schema_version},updated_at:function(){try{return this.network.updated_at||this._json.updated_at}catch(e){return this._json.updated_at}}};Utils.bootstrap(Contract);module.exports=Contract;return Contract}(module||{})}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"truffle-blockchain-utils":4,web3:3,"web3/lib/web3/event.js":3}],2:[function(require,module,exports){var Schema=require("truffle-contract-schema");var Contract=require("./contract.js");var contract=function(options){options=Schema.normalizeOptions(options);var binary=Schema.generateBinary(options,{},{dirty:false});return Contract.clone(binary)};contract.fromSolJS=function(soljs_abstraction,ignore_default_network){if(ignore_default_network==null){ignore_default_network=false}var latest_network=null;var latest_network_updated_at=0;var networks={};Object.keys(soljs_abstraction.all_networks).forEach(function(network_name){if(network_name=="default"){if(ignore_default_network==true){return}else{throw new Error(soljs_abstraction.contract_name+" has legacy 'default' network artifacts stored within it. Generally these artifacts were a result of running Truffle on a development environment -- in order to store contracts with truffle-contract, all networks must have an identified id. If you're sure this default network represents your development environment, you can ignore processing of the default network by passing `true` as the second argument to this function. However, if you think this network represents artifacts you'd like to keep (i.e., addresses deployed to the main network), you'll need to edit your .sol.js file yourself and change the default network id to be the id of your desired network. For most people, ignoring the default network is the correct option.")}}if(soljs_abstraction.all_networks[network_name].updated_at>latest_network_updated_at){latest_network=network_name;latest_network_updated_at=soljs_abstraction.all_networks[network_name].updated_at}networks[network_name]={};["address","events","links","updated_at"].forEach(function(key){networks[network_name][key]=soljs_abstraction.all_networks[network_name][key]})});latest_network=soljs_abstraction.all_networks[latest_network]||{};var json={unlinked_binary:latest_network.unlinked_binary,abi:latest_network.abi,networks:networks,updated_at:latest_network_updated_at==0?undefined:latest_network_updated_at};return contract(json)};module.exports=contract;if(typeof window!=="undefined"){window.TruffleContract=contract}},{"./contract.js":1,"truffle-contract-schema":5}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){var Web3=require("web3");var Blockchain={parse:function(uri){var parsed={};if(uri.indexOf("blockchain://")!=0)return parsed;uri=uri.replace("blockchain://","");var pieces=uri.split("/block/");parsed.genesis_hash="0x"+pieces[0];parsed.block_hash="0x"+pieces[1];return parsed},asURI:function(provider,callback){var web3=new Web3(provider);web3.eth.getBlock(0,function(err,genesis){if(err)return callback(err);web3.eth.getBlock("latest",function(err,latest){if(err)return callback(err);var url="blockchain://"+genesis.hash.replace("0x","")+"/block/"+latest.hash.replace("0x","");callback(null,url)})})},matches:function(uri,provider,callback){uri=this.parse(uri);var expected_genesis=uri.genesis_hash;var expected_block=uri.block_hash;var web3=new Web3(provider);web3.eth.getBlock(0,function(err,block){if(err)return callback(err);if(block.hash!=expected_genesis)return callback(null,false);web3.eth.getBlock(expected_block,function(err,block){if(err||block==null){return callback(null,false)}callback(null,true)})})}};module.exports=Blockchain},{web3:3}],5:[function(require,module,exports){var sha3=require("crypto-js/sha3");var schema_version=require("./package.json").version;var TruffleSchema={normalizeOptions:function(options,extra_options){extra_options=extra_options||{};var normalized={};var expected_keys=["contract_name","abi","binary","unlinked_binary","address","networks","links","events","network_id","default_network","updated_at"];expected_keys.forEach(function(key){var value;try{value=options[key];if(value!=undefined){normalized[key]=value}}catch(e){}try{value=extra_options[key];if(value!=undefined){normalized[key]=value}}catch(e){}});if(options.interface!=null){normalized.abi=JSON.parse(options.interface)}if(options.bytecode!=null){normalized.unlinked_binary=options.bytecode}if(normalized.unlinked_binary==null&&normalized.binary){normalized.unlinked_binary=normalized.binary}delete normalized.binary;this.copyCustomOptions(options,normalized);return normalized},generateBinary:function(options,existing_binary,extra_options){extra_options=extra_options||{};existing_binary=existing_binary||{};if(options.overwrite==true){existing_binary={}}existing_binary.contract_name=options.contract_name||existing_binary.contract_name||"Contract";existing_binary.default_network=options.default_network||existing_binary.default_network;existing_binary.abi=options.abi||existing_binary.abi;existing_binary.unlinked_binary=options.unlinked_binary||existing_binary.unlinked_binary;if(existing_binary.unlinked_binary&&existing_binary.unlinked_binary.indexOf("0x")<0){existing_binary.unlinked_binary="0x"+existing_binary.unlinked_binary}existing_binary.networks=existing_binary.networks||{};options.networks=options.networks||{};Object.keys(options.networks).forEach(function(network_id){existing_binary.networks[network_id]=options.networks[network_id]});var updated_at=(new Date).getTime();if(options.network_id){existing_binary.networks[options.network_id]=existing_binary.networks[options.network_id]||{};var network=existing_binary.networks[options.network_id];network.address=options.address||network.address;network.links=options.links;network.events=network.events||{};options.events=options.events||{};Object.keys(options.events).forEach(function(event_id){options.events[event_id]=options.events[event_id]});existing_binary.abi.forEach(function(item){if(item.type!="event")return;var signature=item.name+"("+item.inputs.map(function(param){return param.type}).join(",")+")";network.events["0x"+sha3(signature,{outputLength:256})]=item});if(extra_options.dirty!==false){network.updated_at=updated_at}}else{if(options.address){throw new Error("Cannot set address without network id")}}Object.keys(existing_binary.networks).forEach(function(network_id){var network=existing_binary.networks[network_id];network.links=network.links||{}});existing_binary.schema_version=schema_version;if(extra_options.dirty!==false){existing_binary.updated_at=updated_at}else{existing_binary.updated_at=options.updated_at||existing_binary.updated_at||updated_at}this.copyCustomOptions(options,existing_binary);return existing_binary},copyCustomOptions:function(from,to){Object.keys(from).forEach(function(key){if(key.indexOf("x-")!=0)return;try{value=from[key];if(value!=undefined){to[key]=value}}catch(e){}})}};module.exports=TruffleSchema},{"./package.json":9,"crypto-js/sha3":7}],6:[function(require,module,exports){(function(root,factory){if(typeof exports==="object"){module.exports=exports=factory()}else if(typeof define==="function"&&define.amd){define([],factory)}else{root.CryptoJS=factory()}})(this,function(){var CryptoJS=CryptoJS||function(Math,undefined){var create=Object.create||function(){function F(){}return function(obj){var subtype;F.prototype=obj;subtype=new F;F.prototype=null;return subtype}}();var C={};var C_lib=C.lib={};var Base=C_lib.Base=function(){return{extend:function(overrides){var subtype=create(this);if(overrides){subtype.mixIn(overrides)}if(!subtype.hasOwnProperty("init")||this.init===subtype.init){subtype.init=function(){subtype.$super.init.apply(this,arguments)}}subtype.init.prototype=subtype;subtype.$super=this;return subtype},create:function(){var instance=this.extend();instance.init.apply(instance,arguments);return instance},init:function(){},mixIn:function(properties){for(var propertyName in properties){if(properties.hasOwnProperty(propertyName)){this[propertyName]=properties[propertyName]}}if(properties.hasOwnProperty("toString")){this.toString=properties.toString}},clone:function(){return this.init.prototype.extend(this)}}}();var WordArray=C_lib.WordArray=Base.extend({init:function(words,sigBytes){words=this.words=words||[];if(sigBytes!=undefined){this.sigBytes=sigBytes}else{this.sigBytes=words.length*4}},toString:function(encoder){return(encoder||Hex).stringify(this)},concat:function(wordArray){var thisWords=this.words;var thatWords=wordArray.words;var thisSigBytes=this.sigBytes;var thatSigBytes=wordArray.sigBytes;this.clamp();if(thisSigBytes%4){for(var i=0;i<thatSigBytes;i++){var thatByte=thatWords[i>>>2]>>>24-i%4*8&255;thisWords[thisSigBytes+i>>>2]|=thatByte<<24-(thisSigBytes+i)%4*8}}else{for(var i=0;i<thatSigBytes;i+=4){thisWords[thisSigBytes+i>>>2]=thatWords[i>>>2]}}this.sigBytes+=thatSigBytes;return this},clamp:function(){var words=this.words;var sigBytes=this.sigBytes;words[sigBytes>>>2]&=4294967295<<32-sigBytes%4*8;words.length=Math.ceil(sigBytes/4)},clone:function(){var clone=Base.clone.call(this);clone.words=this.words.slice(0);return clone},random:function(nBytes){var words=[];var r=function(m_w){var m_w=m_w;var m_z=987654321;var mask=4294967295;return function(){m_z=36969*(m_z&65535)+(m_z>>16)&mask;m_w=18e3*(m_w&65535)+(m_w>>16)&mask;var result=(m_z<<16)+m_w&mask;result/=4294967296;result+=.5;return result*(Math.random()>.5?1:-1)}};for(var i=0,rcache;i<nBytes;i+=4){var _r=r((rcache||Math.random())*4294967296);rcache=_r()*987654071;words.push(_r()*4294967296|0)}return new WordArray.init(words,nBytes)}});var C_enc=C.enc={};var Hex=C_enc.Hex={stringify:function(wordArray){var words=wordArray.words;var sigBytes=wordArray.sigBytes;var hexChars=[];for(var i=0;i<sigBytes;i++){var bite=words[i>>>2]>>>24-i%4*8&255;hexChars.push((bite>>>4).toString(16));hexChars.push((bite&15).toString(16))}return hexChars.join("")},parse:function(hexStr){var hexStrLength=hexStr.length;var words=[];for(var i=0;i<hexStrLength;i+=2){words[i>>>3]|=parseInt(hexStr.substr(i,2),16)<<24-i%8*4}return new WordArray.init(words,hexStrLength/2)}};var Latin1=C_enc.Latin1={stringify:function(wordArray){var words=wordArray.words;var sigBytes=wordArray.sigBytes;var latin1Chars=[];for(var i=0;i<sigBytes;i++){var bite=words[i>>>2]>>>24-i%4*8&255;latin1Chars.push(String.fromCharCode(bite))}return latin1Chars.join("")},parse:function(latin1Str){var latin1StrLength=latin1Str.length;var words=[];for(var i=0;i<latin1StrLength;i++){words[i>>>2]|=(latin1Str.charCodeAt(i)&255)<<24-i%4*8}return new WordArray.init(words,latin1StrLength)}};var Utf8=C_enc.Utf8={stringify:function(wordArray){try{return decodeURIComponent(escape(Latin1.stringify(wordArray)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:function(utf8Str){return Latin1.parse(unescape(encodeURIComponent(utf8Str)))}};var BufferedBlockAlgorithm=C_lib.BufferedBlockAlgorithm=Base.extend({reset:function(){this._data=new WordArray.init;this._nDataBytes=0},_append:function(data){if(typeof data=="string"){data=Utf8.parse(data)}this._data.concat(data);this._nDataBytes+=data.sigBytes},_process:function(doFlush){var data=this._data;var dataWords=data.words;var dataSigBytes=data.sigBytes;var blockSize=this.blockSize;var blockSizeBytes=blockSize*4;var nBlocksReady=dataSigBytes/blockSizeBytes;if(doFlush){nBlocksReady=Math.ceil(nBlocksReady)}else{nBlocksReady=Math.max((nBlocksReady|0)-this._minBufferSize,0)}var nWordsReady=nBlocksReady*blockSize;var nBytesReady=Math.min(nWordsReady*4,dataSigBytes);if(nWordsReady){for(var offset=0;offset<nWordsReady;offset+=blockSize){this._doProcessBlock(dataWords,offset)}var processedWords=dataWords.splice(0,nWordsReady);data.sigBytes-=nBytesReady}return new WordArray.init(processedWords,nBytesReady)},clone:function(){var clone=Base.clone.call(this);clone._data=this._data.clone();return clone},_minBufferSize:0});var Hasher=C_lib.Hasher=BufferedBlockAlgorithm.extend({cfg:Base.extend(),init:function(cfg){this.cfg=this.cfg.extend(cfg);this.reset()},reset:function(){BufferedBlockAlgorithm.reset.call(this);this._doReset()},update:function(messageUpdate){this._append(messageUpdate);this._process();return this},finalize:function(messageUpdate){if(messageUpdate){this._append(messageUpdate)}var hash=this._doFinalize();return hash},blockSize:512/32,_createHelper:function(hasher){return function(message,cfg){return new hasher.init(cfg).finalize(message)}},_createHmacHelper:function(hasher){return function(message,key){return new C_algo.HMAC.init(hasher,key).finalize(message)}}});var C_algo=C.algo={};return C}(Math);return CryptoJS})},{}],7:[function(require,module,exports){(function(root,factory,undef){if(typeof exports==="object"){module.exports=exports=factory(require("./core"),require("./x64-core"))}else if(typeof define==="function"&&define.amd){define(["./core","./x64-core"],factory)}else{factory(root.CryptoJS)}})(this,function(CryptoJS){(function(Math){var C=CryptoJS;var C_lib=C.lib;var WordArray=C_lib.WordArray;var Hasher=C_lib.Hasher;var C_x64=C.x64;var X64Word=C_x64.Word;var C_algo=C.algo;var RHO_OFFSETS=[];var PI_INDEXES=[];var ROUND_CONSTANTS=[];(function(){var x=1,y=0;for(var t=0;t<24;t++){RHO_OFFSETS[x+5*y]=(t+1)*(t+2)/2%64;var newX=y%5;var newY=(2*x+3*y)%5;x=newX;y=newY}for(var x=0;x<5;x++){for(var y=0;y<5;y++){PI_INDEXES[x+5*y]=y+(2*x+3*y)%5*5}}var LFSR=1;for(var i=0;i<24;i++){var roundConstantMsw=0;var roundConstantLsw=0;for(var j=0;j<7;j++){if(LFSR&1){var bitPosition=(1<<j)-1;if(bitPosition<32){roundConstantLsw^=1<<bitPosition}else{roundConstantMsw^=1<<bitPosition-32}}if(LFSR&128){LFSR=LFSR<<1^113}else{LFSR<<=1}}ROUND_CONSTANTS[i]=X64Word.create(roundConstantMsw,roundConstantLsw)}})();var T=[];(function(){for(var i=0;i<25;i++){T[i]=X64Word.create()}})();var SHA3=C_algo.SHA3=Hasher.extend({cfg:Hasher.cfg.extend({outputLength:512}),_doReset:function(){var state=this._state=[];for(var i=0;i<25;i++){state[i]=new X64Word.init}this.blockSize=(1600-2*this.cfg.outputLength)/32},_doProcessBlock:function(M,offset){var state=this._state;var nBlockSizeLanes=this.blockSize/2;for(var i=0;i<nBlockSizeLanes;i++){var M2i=M[offset+2*i];var M2i1=M[offset+2*i+1];M2i=(M2i<<8|M2i>>>24)&16711935|(M2i<<24|M2i>>>8)&4278255360;M2i1=(M2i1<<8|M2i1>>>24)&16711935|(M2i1<<24|M2i1>>>8)&4278255360;var lane=state[i];lane.high^=M2i1;lane.low^=M2i}for(var round=0;round<24;round++){for(var x=0;x<5;x++){var tMsw=0,tLsw=0;for(var y=0;y<5;y++){var lane=state[x+5*y];tMsw^=lane.high;tLsw^=lane.low}var Tx=T[x];Tx.high=tMsw;Tx.low=tLsw}for(var x=0;x<5;x++){var Tx4=T[(x+4)%5];var Tx1=T[(x+1)%5];var Tx1Msw=Tx1.high;var Tx1Lsw=Tx1.low;var tMsw=Tx4.high^(Tx1Msw<<1|Tx1Lsw>>>31);var tLsw=Tx4.low^(Tx1Lsw<<1|Tx1Msw>>>31);for(var y=0;y<5;y++){var lane=state[x+5*y];lane.high^=tMsw;lane.low^=tLsw}}for(var laneIndex=1;laneIndex<25;laneIndex++){var lane=state[laneIndex];var laneMsw=lane.high;var laneLsw=lane.low;var rhoOffset=RHO_OFFSETS[laneIndex];if(rhoOffset<32){var tMsw=laneMsw<<rhoOffset|laneLsw>>>32-rhoOffset;var tLsw=laneLsw<<rhoOffset|laneMsw>>>32-rhoOffset}else{var tMsw=laneLsw<<rhoOffset-32|laneMsw>>>64-rhoOffset;var tLsw=laneMsw<<rhoOffset-32|laneLsw>>>64-rhoOffset}var TPiLane=T[PI_INDEXES[laneIndex]];TPiLane.high=tMsw;TPiLane.low=tLsw}var T0=T[0];var state0=state[0];T0.high=state0.high;T0.low=state0.low;for(var x=0;x<5;x++){for(var y=0;y<5;y++){var laneIndex=x+5*y;var lane=state[laneIndex];var TLane=T[laneIndex];var Tx1Lane=T[(x+1)%5+5*y];var Tx2Lane=T[(x+2)%5+5*y];lane.high=TLane.high^~Tx1Lane.high&Tx2Lane.high;lane.low=TLane.low^~Tx1Lane.low&Tx2Lane.low}}var lane=state[0];var roundConstant=ROUND_CONSTANTS[round];lane.high^=roundConstant.high;lane.low^=roundConstant.low}},_doFinalize:function(){var data=this._data;var dataWords=data.words;var nBitsTotal=this._nDataBytes*8;var nBitsLeft=data.sigBytes*8;var blockSizeBits=this.blockSize*32;dataWords[nBitsLeft>>>5]|=1<<24-nBitsLeft%32;dataWords[(Math.ceil((nBitsLeft+1)/blockSizeBits)*blockSizeBits>>>5)-1]|=128;data.sigBytes=dataWords.length*4;this._process();var state=this._state;var outputLengthBytes=this.cfg.outputLength/8;var outputLengthLanes=outputLengthBytes/8;var hashWords=[];for(var i=0;i<outputLengthLanes;i++){var lane=state[i];var laneMsw=lane.high;var laneLsw=lane.low;laneMsw=(laneMsw<<8|laneMsw>>>24)&16711935|(laneMsw<<24|laneMsw>>>8)&4278255360;laneLsw=(laneLsw<<8|laneLsw>>>24)&16711935|(laneLsw<<24|laneLsw>>>8)&4278255360;hashWords.push(laneLsw);hashWords.push(laneMsw)}return new WordArray.init(hashWords,outputLengthBytes)},clone:function(){var clone=Hasher.clone.call(this);var state=clone._state=this._state.slice(0);for(var i=0;i<25;i++){state[i]=state[i].clone()}return clone}});C.SHA3=Hasher._createHelper(SHA3);C.HmacSHA3=Hasher._createHmacHelper(SHA3)})(Math);return CryptoJS.SHA3})},{"./core":6,"./x64-core":8}],8:[function(require,module,exports){(function(root,factory){if(typeof exports==="object"){module.exports=exports=factory(require("./core"))}else if(typeof define==="function"&&define.amd){define(["./core"],factory)}else{factory(root.CryptoJS)}})(this,function(CryptoJS){(function(undefined){var C=CryptoJS;var C_lib=C.lib;var Base=C_lib.Base;var X32WordArray=C_lib.WordArray;var C_x64=C.x64={};var X64Word=C_x64.Word=Base.extend({init:function(high,low){this.high=high;this.low=low}});var X64WordArray=C_x64.WordArray=Base.extend({init:function(words,sigBytes){words=this.words=words||[];if(sigBytes!=undefined){this.sigBytes=sigBytes}else{this.sigBytes=words.length*8}},toX32:function(){var x64Words=this.words;var x64WordsLength=x64Words.length;var x32Words=[];for(var i=0;i<x64WordsLength;i++){var x64Word=x64Words[i];x32Words.push(x64Word.high);x32Words.push(x64Word.low)}return X32WordArray.create(x32Words,this.sigBytes)},clone:function(){var clone=Base.clone.call(this);var words=clone.words=this.words.slice(0);var wordsLength=words.length;for(var i=0;i<wordsLength;i++){words[i]=words[i].clone()}return clone}})})();return CryptoJS})},{"./core":6}],9:[function(require,module,exports){module.exports={_args:[[{raw:"truffle-contract-schema@0.0.5",scope:null,escapedName:"truffle-contract-schema",name:"truffle-contract-schema",rawSpec:"0.0.5",spec:"0.0.5",type:"version"},"/Users/tim/Documents/workspace/Consensys/truffle-contract"]],_from:"truffle-contract-schema@0.0.5",_id:"truffle-contract-schema@0.0.5",_inCache:true,_location:"/truffle-contract-schema",_nodeVersion:"6.9.1",
_npmOperationalInternal:{host:"packages-12-west.internal.npmjs.com",tmp:"tmp/truffle-contract-schema-0.0.5.tgz_1485557985137_0.46875762194395065"},_npmUser:{name:"tcoulter",email:"tim@timothyjcoulter.com"},_npmVersion:"3.10.8",_phantomChildren:{},_requested:{raw:"truffle-contract-schema@0.0.5",scope:null,escapedName:"truffle-contract-schema",name:"truffle-contract-schema",rawSpec:"0.0.5",spec:"0.0.5",type:"version"},_requiredBy:["/"],_resolved:"https://registry.npmjs.org/truffle-contract-schema/-/truffle-contract-schema-0.0.5.tgz",_shasum:"5e9d20bd0bf2a27fe94310748249d484eee49961",_shrinkwrap:null,_spec:"truffle-contract-schema@0.0.5",_where:"/Users/tim/Documents/workspace/Consensys/truffle-contract",author:{name:"Tim Coulter",email:"tim.coulter@consensys.net"},bugs:{url:"https://github.com/trufflesuite/truffle-schema/issues"},dependencies:{"crypto-js":"^3.1.9-1"},description:"JSON schema for contract artifacts",devDependencies:{mocha:"^3.2.0"},directories:{},dist:{shasum:"5e9d20bd0bf2a27fe94310748249d484eee49961",tarball:"https://registry.npmjs.org/truffle-contract-schema/-/truffle-contract-schema-0.0.5.tgz"},gitHead:"cfa4313bd4bb95bf5b94f85185203ead418f9ee6",homepage:"https://github.com/trufflesuite/truffle-schema#readme",keywords:["ethereum","json","schema","contract","artifacts"],license:"MIT",main:"index.js",maintainers:[{name:"tcoulter",email:"tim@timothyjcoulter.com"}],name:"truffle-contract-schema",optionalDependencies:{},readme:"ERROR: No README data found!",repository:{type:"git",url:"git+https://github.com/trufflesuite/truffle-schema.git"},scripts:{test:"mocha"},version:"0.0.5"}},{}]},{},[2]);